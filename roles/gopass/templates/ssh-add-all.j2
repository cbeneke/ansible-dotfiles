#! /usr/bin/env bash
# {{ ansible_managed }}

COLOR_GREEN='\033[0;32m'
COLOR_YELLOW='\033[0;33m'
COLOR_RED='\033[0;31m'
COLOR_RESET='\033[0;0m'

for file in $(find {{ gopass_ssh_add_keys_path }} -type f -name '*.pub'); do
  privkey="${file%".pub"}"
  relative="${privkey#"{{ gopass_ssh_add_keys_path }}"}"
  if [[ ! -f ${privkey} ]]; then
    printf "${COLOR_RED}Privatekey for '${file}' not found. Skipping...${COLOR_RESET}\n"
    continue
  fi

  password="$(gopass show --password {{ gopass_ssh_add_store }}sshkeys/{{ gopass_ssh_add_hostname }}/${relative} 2>/dev/null)"
  if [[ $? -ne 0 ]]; then
    # Try to print pubkey. If password protected will have rc 255
    ssh-keygen -y -P '' -f ${privkey} >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
      printf "${COLOR_YELLOW}Could not find password for '${relative}'. Adding withouth password!${COLOR_RESET}\n"
      ssh-add -q ${privkey}
    else
      printf "${COLOR_RED}Could not find password for '${relative}'. Skipping...${COLOR_RESET}\n"
    fi
  else
    printf "${COLOR_GREEN}Adding key '${privkey}'.${COLOR_RESET}\n"
    expect <<EOF >/dev/null
      spawn ssh-add -q ${privkey}
      expect "Enter passphrase"
      send "$(printf "%q" ${password})\r"
      expect eof
EOF
  fi
done

# Create ansible vault
vault=$(gopass show --password {{ gopass_ssh_add_store }}misc/vault-rootlink 2>/dev/null)
if [[ $? -eq 0 ]]; then
  echo -n "${vault}" > /tmp/vault
fi
